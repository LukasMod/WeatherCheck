{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","react_default","a","createElement","onSubmit","submit","type","value","placeholder","onChange","change","Results","_props$weather","weather","err","city","date","sunrise","sunset","temp","pressure","wind","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","Fragment","className","concat","App","state","handleInputChange","e","_this","setState","target","prevProps","prevState","_this2","this","API","fetch","then","response","ok","Error","json","data","time","toLocaleString","sys","main","speed","catch","console","log","components_Form","components_Result","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"8OAgBeA,SAfF,SAACC,GACZ,OAEEC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMK,QACpBJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLC,MAAOP,EAAMO,MACbC,YAAY,YACZC,SAAUT,EAAMU,YCmCTC,SAzCC,SAACX,GAAU,IAAAY,EAUrBZ,EAAMa,QARRC,EAFuBF,EAEvBE,IACAC,EAHuBH,EAGvBG,KACAC,EAJuBJ,EAIvBI,KACAC,EALuBL,EAKvBK,QACAC,EANuBN,EAMvBM,OACAC,EAPuBP,EAOvBO,KACAC,EARuBR,EAQvBQ,SACAC,EATuBT,EASvBS,KAGEC,EAAU,KAEd,IAAKR,GAAOC,EAAM,CAChB,IAAMQ,EAAc,IAAIC,KAAe,IAAVP,GAAgBQ,qBACvCC,EAAa,IAAIF,KAAc,IAATN,GAAeO,qBAE3CH,EACErB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyB,SAAA,KACE1B,EAAAC,EAAAC,cAAA,yBACcF,EAAAC,EAAAC,cAAA,UAAKY,IAEnBd,EAAAC,EAAAC,cAAA,oBAAYY,GACZd,EAAAC,EAAAC,cAAA,oBAAYa,GACZf,EAAAC,EAAAC,cAAA,2BAAmBgB,EAAnB,UACAlB,EAAAC,EAAAC,cAAA,uBAAeoB,GACftB,EAAAC,EAAAC,cAAA,sBAAcuB,GACdzB,EAAAC,EAAAC,cAAA,wBAAgBiB,EAAhB,QACAnB,EAAAC,EAAAC,cAAA,0BAAkBkB,EAAlB,SAKN,OACEpB,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,UACZd,GAAoB,KAAb,CAAEC,QAAT,0BAAAc,OAAmDd,GAASO,KCoEpDQ,6MArGbC,MAAQ,CACNxB,MAAO,GACPS,KAAM,GACND,KAAM,GACNE,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNP,KAAK,KAGPkB,kBAAoB,SAACC,GACnBC,EAAKC,SAAS,CAAE5B,MAAO0B,EAAEG,OAAO7B,2FAqCf8B,EAAWC,GAAW,IAAAC,EAAAC,KACvC,GAAIF,EAAU/B,QAAUiC,KAAKT,MAAMxB,MAAO,CACxC,IACMkC,EAAG,qDAAAZ,OACPW,KAAKT,MAAMxB,MADJ,WAAAsB,OADM,mCACN,iBAITa,MAAMD,GACHE,KAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,8BAEbH,KAAK,SAACC,GAAD,OAAcA,EAASG,SAC5BJ,KAAK,SAACK,GACL,IAAMC,GAAO,IAAIzB,MAAO0B,iBACxBX,EAAKJ,SAAS,SAACG,GAAD,MAAgB,CAC5BtB,KAAMiC,EACNlC,KAAMuB,EAAU/B,MAChBU,QAAS+B,EAAKG,IAAIlC,QAClBC,OAAQ8B,EAAKG,IAAIjC,OACjBC,KAAM6B,EAAKI,KAAKjC,KAChBC,SAAU4B,EAAKI,KAAKhC,SACpBC,KAAM2B,EAAK3B,KAAKgC,MAChBvC,KAAK,OAGRwC,MAAM,SAACxC,GACNyC,QAAQC,IAAI1C,GACZyB,EAAKJ,SAAS,SAACG,GAAD,MAAgB,CAAExB,KAAK,EAAMC,KAAMuB,EAAU/B,6CAMjE,OACEN,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAACsD,EAAD,CACE/C,OAAQ8B,KAAKR,kBACbzB,MAAOiC,KAAKT,MAAMxB,QAGpBN,EAAAC,EAAAC,cAACuD,EAAD,CAAQ7C,QAAS2B,KAAKT,QACtB9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qCAhGUwD,aCAlBC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c85b940c.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Form = (props) => {\r\n  return (\r\n    // <form onSubmit={props.submit}>\r\n    <form onSubmit={props.submit}>\r\n      <input\r\n        type=\"text\"\r\n        value={props.value}\r\n        placeholder=\"Type city\"\r\n        onChange={props.change}\r\n      />\r\n      {/* <button>Search City</button> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Result.css\";\r\n\r\nconst Results = (props) => {\r\n  const {\r\n    err,\r\n    city,\r\n    date,\r\n    sunrise,\r\n    sunset,\r\n    temp,\r\n    pressure,\r\n    wind,\r\n  } = props.weather;\r\n\r\n  let content = null;\r\n\r\n  if (!err && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n    content = (\r\n      <>\r\n        <h3>\r\n          Wheater for <em>{city}</em>\r\n        </h3>\r\n        <div>City: {city}</div>\r\n        <div>Date: {date}</div>\r\n        <div>Temperature: {temp} &#176;C</div>\r\n        <div>Sunrise: {sunriseTime}</div>\r\n        <div>Sunset: {sunsetTime}</div>\r\n        <div>Pressure: {pressure} hPa</div>\r\n        <div>Wind speed: {wind} m/s</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      {err || { city } === \"\" ? `There is no such city: ${city}` : content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    date: \"\",\n    city: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    err: false,\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  // handleCitySubmit = (e) => {\n  //   e.preventDefault();\n  //   const APIKey = \"940db60953fdfb5ee0c73670f7365bca\";\n  //   const API = `https://api.openweathermap.org/data/2.5/weather?q=${\n  //     this.state.value\n  //   }&APPID=${APIKey}&units=metric`;\n\n  //   fetch(API)\n  //     .then((response) => {\n  //       if (response.ok) {\n  //         return response;\n  //       }\n  //       throw Error(\"Something is not working\");\n  //     })\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       const time = new Date().toLocaleString();\n  //       this.setState((prevState) => ({\n  //         date: time,\n  //         city: prevState.value,\n  //         sunrise: data.sys.sunrise,\n  //         sunset: data.sys.sunset,\n  //         temp: data.main.temp,\n  //         pressure: data.main.pressure,\n  //         wind: data.wind.speed,\n  //         err: false,\n  //       }));\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       this.setState((prevState) => ({ err: true, city: prevState.value }));\n  //     });\n  // };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.value !== this.state.value) {\n      const APIKey = \"940db60953fdfb5ee0c73670f7365bca\";\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.state.value\n      }&APPID=${APIKey}&units=metric`;\n\n      fetch(API)\n        .then((response) => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error(\"Something is not working\");\n        })\n        .then((response) => response.json())\n        .then((data) => {\n          const time = new Date().toLocaleString();\n          this.setState((prevState) => ({\n            date: time,\n            city: prevState.value,\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            temp: data.main.temp,\n            pressure: data.main.pressure,\n            wind: data.wind.speed,\n            err: false,\n          }));\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState((prevState) => ({ err: true, city: prevState.value }));\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Form\n          change={this.handleInputChange}\n          value={this.state.value}\n          // submit={this.handleCitySubmit}\n        />\n        <Result weather={this.state} />\n        <br />\n        <h3>Have a nice day</h3>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}